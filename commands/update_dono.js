const { SlashCommandBuilder } = require('discord.js');
const warSchema = require('./../models/wars');
const MemberSchema = require('./../models/war_data');
const { GoogleSpreadsheet } =  require('google-spreadsheet');
const {JWT} = require('google-auth-library');

var serviceAccountAuth;
var doc;
var sheetIndex = 4;


module.exports = {
    data: new SlashCommandBuilder().setName('update_dono').setDescription('Updates the total score tab, to make it match with the war score and donos score tabs'), 
    run: async({ interaction }) => {
        await interaction.deferReply();
        await initSheet();
        const sheet = doc.sheetsByIndex[sheetIndex];
        const rows = await sheet.getRows(); // can pass in { limit, offset }
        for (const row of rows) {
            let warScore = row.get('Total war score');
            if(isNaN(parseInt(warScore))){
                continue;
            }
            let donosScore = row.get('Donos score');
            let testScore = row.get('Total score');
            let totalScore = parseInt(warScore) + parseInt(donosScore);
            if(testScore == totalScore){
                continue;
            }
            row.set('Total score', totalScore);
            row.save();
        }
        await interaction.editReply("Updated the total score tab to match the war score and donos score tabs");
    },
    Globalcooldown_60s: true,
    devOnly: true,
}




async function initSheet(){
    serviceAccountAuth = new JWT({
        // env var values here are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        keyFile: process.env.GOOGLE_PRIVATE_KEY,
        scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });
    doc = new GoogleSpreadsheet(process.env.SPREADSHEET_ID, serviceAccountAuth);
    await doc.loadInfo(); // loads document properties and worksheets
  
}